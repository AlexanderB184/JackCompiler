class String {
    constructor String new(int maxLength) {
        let this = Memory.alloc(maxLength+1);
        do setCharAt(0,0);
        return this;
    }
    method void dispose() {
        if (this) {
            do Memory.deAlloc(this);
        }
        return;
    }
    method int length() {
        String ptr;
        int len;
        if (this = null) {
            return 0;
        }
        ptr = this;
        len = 0
        while (ptr[0]) {
            ptr = ptr + 1;
            len = len + 1;
        }
        return len;
    }
    method char charAt(int j) {
        return peek(this+j);
    }
    method void setCharAt(int j, char c) {
        do poke(this+j,c);
        return;
    }
    method String appendChar(char c) {
        String src;
        String str;
        int i;
        let src = this;
        let str = new(length()+2);
        if (src = null) {
            let str[0] = c;
            let str[1] = 0;
            dispose();
            return str;
        }
        let i = 0;
        while (src[i]) {
            let str[i] = src[i]
            let i = i + 1;
        }
        let str[i] = c;
        let str[i+1] = 0;
        dispose();
        return str;
    }
    method void eraseLastChar() {
        String str;
        if (this) {
            str = this;
            let str[length()-1] = 0;
        }
        return;
    }
    method int intValue() {}
    method void setInt(int j) {}
    function char backSpace() {
        return 8;
    }
    function char doubleQuote() {
        return 34;
    }
    function char newLine() {
        return 10;
    }
}